{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/addField.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/material.components.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { FormBuilder, FormGroup, FormArray, FormControl } from '@angular/forms';\r\n\r\nexport class AddFields {\r\n\r\n    constructor(private fb: FormBuilder, private form: FormGroup ) {}\r\n\r\n    initItemRows(): FormGroup {\r\n        return this.fb.group({\r\n            item: [''] // add more components\r\n        });\r\n    }\r\n\r\n    // add new item in array\r\n    addItems(): void {\r\n        const control = <FormArray>this.form.controls['itemRows'];\r\n        control.push(this.initItemRows());\r\n    }\r\n\r\n    // remove controls form array\r\n    removeItems(index: number): void {\r\n        const control = <FormArray>this.form.controls['itemRows'];\r\n        control.removeAt(index);\r\n    }\r\n\r\n    createForm() {\r\n        return this.form = new FormGroup({\r\n            email: new FormControl(),\r\n            itemRows: this.fb.array([this.initItemRows()])\r\n        });\r\n    }\r\n\r\n}\r\n","<form \n  [formGroup] =\"form\" \n  class=\"form\" \n  (submit) =\"submitForm(form)\">\n\n  <mat-form-field>\n    <input \n      matInput required\n      type=\"email\"\n      placeholder=\"Enter your email\" formControlName=\"email\" name=\"email\">\n    <mat-error *ngIf=\"form.controls.email.errors\">\n      This is required\n    </mat-error>\n  </mat-form-field>\n  \n  <!--dynamic control loop-->\n  <div  *ngIf=\"form.controls.itemRows\" formArrayName=\"itemRows\">\n    <div \n      *ngFor=\"let itemrow of form.controls.itemRows.controls; let index=index;let last = last;\" \n      [formGroupName]=\"index\">\n      <div \n        fxLayout=\"row\" \n        fxLayoutAlign=\"space-between center\" >\n      <!-- {{itemrow | json}} -->\n        <mat-form-field>\n          <input \n            matInput \n            required\n            placeholder=\"Enter your subject\" \n            formControlName=\"item\"\n            name=\"item\">\n          <mat-error *ngIf=\"form.controls.itemRows['controls'][index].controls['item'].errors\"> \n            This is required\n          </mat-error>\n        </mat-form-field>\n\n        <span>&nbsp; </span>\n\n        <button \n          type=\"button\" \n          mat-mini-fab \n          color=\"accent\" \n          (click)=\"addItems()\" \n          *ngIf=\"last\">\n          <mat-icon \n            aria-label=\"add\">add</mat-icon>\n        </button>\n\n        <span>&nbsp; </span>\n        <button \n          type=\"button\" \n          mat-mini-fab \n          color=\"accent\" \n          *ngIf=\"!last\"\n          (click)=\"removeItems(index)\">\n          <mat-icon aria-label=\"remove icon\">remove</mat-icon>\n        </button>\n      </div>\n    </div>\n  </div>\n  <div fxLayout=\"row\" fxLayoutAlign='center center'>\n    <button \n      mat-raised-button\n      color=\"primary\">\n      Submit\n    </button>\n  </div>\n\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { AddFields } from './addField';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  form: FormGroup;\n\n  private addFields = new AddFields(this.fb, this.form);\n\n  constructor(private fb: FormBuilder) {}\n\n  addItems(): void {\n    this.addFields.addItems();\n  }\n\n  removeItems(index): void {\n    this.addFields.removeItems(index);\n  }\n\n  submitForm(form: FormGroup) {\n    console.dir(form);\n  }\n  ngOnInit() {\n    this.form = this.addFields.createForm();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialComponentsModules } from './material.components.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FlexLayoutModule,\n    MaterialComponentsModules,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatInputModule } from '@angular/material';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatFormFieldModule,\r\n        CommonModule,\r\n        MatInputModule,\r\n        BrowserAnimationsModule,\r\n        MatButtonModule,\r\n        MatIconModule\r\n    ],\r\n    exports: [\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        BrowserAnimationsModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        CommonModule]\r\n})\r\nexport class MaterialComponentsModules { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}